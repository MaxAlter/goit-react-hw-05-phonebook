{"version":3,"sources":["components/ContactForm/PhoneBook.module.css","components/filter/Filter.module.css","components/ContactList/list.module.css","components/ContactList/ContactList.module.css","transition/slide.module.css","transition/filter.module.css","transition/styles.module.css","components/AlertComponent/alertContact.module.css","transition/logo.module.css","components/PhoneBook/logo.module.css","components/ContactForm/contactForm.js","components/ContactList/list.js","components/ContactList/contactList.js","components/filter/filter.js","components/AlertComponent/AlertContact.js","components/PhoneBook/PhoneBook.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","userId","shortid","generate","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onHandleForm","this","className","style","contactForm","onSubmit","contactForm_label","htmlFor","contactForm_input","type","onChange","id","autoComplete","contactForm_button","Component","List","onDeleteList","list","button","onClick","ContactList","items","length","contactList","map","item","key","CSSTransition","in","timeout","classNames","slideStyle","unmountOnExit","Filter","onChangeFilter","filterStyle","formFilter","formName_label","formName_input","placeholder","AlertContact","isActiv","styles","mountOnEnter","st","alert","PhoneBookLogo","setTimeout","title","logo","s","App","contacts","filter","error","handleForm","addItems","find","contact","prevState","deleteList","handleFIlter","persistedTasks","localStorage","getItem","JSON","parse","setItem","stringify","filterContact","toLowerCase","includes","filterContacts","TransitionGroup","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e681b607.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"PhoneBook_contactForm__ARcbl\",\"contactForm_label\":\"PhoneBook_contactForm_label__1cwrC\",\"contactForm_input\":\"PhoneBook_contactForm_input__3JlhR\",\"contactForm_button\":\"PhoneBook_contactForm_button__3Bq99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFilter\":\"Filter_formFilter__tXday\",\"formName_label\":\"Filter_formName_label__2aLOR\",\"formName_input\":\"Filter_formName_input__2QVwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__2-ujU\",\"button\":\"list_button__dnkA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1wpct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2XH1G\",\"enterActive\":\"slide_enterActive__2B7J1\",\"exit\":\"slide_exit__kOLVn\",\"exitActive\":\"slide_exitActive__1r-K-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__3bdPI\",\"enterActive\":\"filter_enterActive__2NHE2\",\"exit\":\"filter_exit__2FpS1\",\"exitActive\":\"filter_exitActive__x4vQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"styles_enter__13vy1\",\"enterActive\":\"styles_enterActive__3IKtd\",\"exit\":\"styles_exit__1vE7K\",\"exitActive\":\"styles_exitActive__3gQeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alertContact_alert__3Kaze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logo_enter__1tFB7\",\"enterActive\":\"logo_enterActive__1oryU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"logo_title__2TCtR\"};","import React, { Component, Fragment } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport style from \"./PhoneBook.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  userId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onHandleForm({ ...this.state });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n          <label className={style.contactForm_label} htmlFor={this.userId}>\r\n            Name\r\n            <input\r\n              className={style.contactForm_input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              id={this.userId}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label className={style.contactForm_label} htmlFor={this.userId}>\r\n            Number\r\n            <input\r\n              className={style.contactForm_input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <button className={style.contactForm_button} type=\"submit\">\r\n            Add contacts\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./list.module.css\";\r\n\r\nconst List = ({ name, number, onDeleteList }) => {\r\n  return (\r\n    <>\r\n      <div className={style.list}>\r\n        {number} : {name}\r\n        <button className={style.button} type=\"button\" onClick={onDeleteList}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport List from \"./list\";\r\nimport style from \"./ContactList.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slideStyle from \"../../transition/slide.module.css\";\r\n\r\nconst ContactList = ({ items, onDeleteList }) => {\r\n  return (\r\n    items.length > 0 && (\r\n      <ul className={style.contactList}>\r\n        {items.map((item) => (\r\n          <li key={item.id}>\r\n            <CSSTransition\r\n              in\r\n              timeout={250}\r\n              classNames={slideStyle}\r\n              key={item.id}\r\n              unmountOnExit\r\n            >\r\n              <List {...item} onDeleteList={() => onDeleteList(item.id)} />\r\n            </CSSTransition>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteList: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n\r\n// className={style.contacts}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport filterStyle from \"../../transition/filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <CSSTransition in timeout={250} classNames={filterStyle} unmountOnExit>\r\n      <form className={style.formFilter}>\r\n        <label className={style.formName_label}>Find Contacts by Name</label>\r\n        <input\r\n          className={style.formName_input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n          placeholder=\"Type to filter contacts...\"\r\n          autoComplete=\"off\"\r\n        />\r\n      </form>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../transition/styles.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport st from \"./alertContact.module.css\";\r\n\r\nconst AlertContact = ({ isActiv = false }) => (\r\n  <CSSTransition\r\n    in={isActiv}\r\n    classNames={styles}\r\n    timeout={250}\r\n    mountOnEnter\r\n    unmountOnExit\r\n  >\r\n    <div className={st.alert}>contact already exists</div>\r\n  </CSSTransition>\r\n);\r\n\r\nAlertContact.propTypes = {\r\n  isActive: PropTypes.bool,\r\n};\r\n\r\nexport default AlertContact;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport logo from \"../../transition/logo.module.css\";\r\nimport s from \"./logo.module.css\";\r\n\r\nexport default class PhoneBookLogo extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    isActiv: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.setState({ isActiv: true }), 300);\r\n  }\r\n\r\n  render() {\r\n    const { isActiv } = this.state;\r\n    const { title } = this.props;\r\n    return (\r\n      <CSSTransition in={isActiv} classNames={logo} timeout={500}>\r\n        <div className={s.title}>{title}</div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport ContactForm from \"./components/ContactForm/contactForm\";\nimport ContactList from \"./components/ContactList/contactList\";\nimport Filter from \"./components/filter/filter\";\nimport AlertContact from \"./components/AlertComponent/AlertContact\";\nimport PhoneBook from \"./components/PhoneBook/PhoneBook\";\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    error: false,\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"contacts\");\n\n    if (persistedTasks) {\n      const contacts = JSON.parse(persistedTasks);\n\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  handleForm = (items) => {\n    let addItems = this.state.contacts.find((item) => item.name === items.name);\n\n    if (this.state.contacts.length > 0 && addItems) {\n      this.setState({ error: true });\n      setTimeout(() => this.setState({ error: false }), 2000);\n      return false;\n    } else {\n      const contact = {\n        id: shortid.generate(),\n        name: items.name,\n        number: items.number,\n      };\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  deleteList = (id) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  handleFIlter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  render() {\n    const { contacts, filter, error } = this.state;\n    const filterContact = filterContacts(contacts, filter);\n    return (\n      <TransitionGroup component={null}>\n        <>\n          {error && <AlertContact isActiv={error} />}\n          <PhoneBook title=\"PhoneBook\" />\n          <ContactForm onHandleForm={this.handleForm} />\n          <h2>Contacts</h2>\n          {contacts.length >= 2 && (\n            <Filter value={filter} onChangeFilter={this.handleFIlter} />\n          )}\n          <ContactList items={filterContact} onDeleteList={this.deleteList} />\n        </>\n      </TransitionGroup>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}